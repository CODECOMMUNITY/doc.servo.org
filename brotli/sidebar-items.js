initSidebarItems({"enum":[["DecompressorError",""],["PrefixCodeKind",""],["State",""]],"mod":[["bitreader","bitreader wraps a Read to provide bit-oriented read access to a stream."],["dictionary",""],["huffman",""],["lookuptable",""],["ringbuffer","ringbuffer provides a data structure RingBuffer that uses a single, fixed-size buffer as if it were connected end-to-end. This structure lends itself easily to buffering data streams."],["transformation",""]],"struct":[["Decompressor","Wraps an input stream and provides methods for decompressing."],["Header",""],["MetaBlock",""],["MetaBlockHeader",""]],"type":[["BLen",""],["BlockSwitch",""],["CodeLengths",""],["ContextMap",""],["ContextMode",""],["ContextModes",""],["CopyLength",""],["Distance",""],["DistanceCode",""],["HSkip",""],["HuffmanCodes",""],["InsertAndCopyLength",""],["InsertLength",""],["InsertLengthAndCopyLength",""],["InsertLiterals",""],["IsLast",""],["IsLastEmpty",""],["IsUncompressed",""],["Literal",""],["Literals",""],["MLen",""],["MLenLiterals",""],["MNibbles",""],["MSkipBytes",""],["MSkipLen",""],["NBltypes",""],["NDirect",""],["NPostfix",""],["NSym",""],["NTrees",""],["Symbol",""],["Symbols",""],["TreeSelect",""],["WBits",""]]});