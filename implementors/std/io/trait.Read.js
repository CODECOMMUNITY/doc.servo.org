(function() {var implementors = {};
implementors["std"] = [];implementors["brotli"] = ["impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='brotli/struct.Decompressor.html' title='brotli::Decompressor'>Decompressor</a>&lt;R&gt;",];implementors["flate2"] = ["impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/bufreader/struct.BufReader.html' title='flate2::bufreader::BufReader'>BufReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/crc/struct.CrcReader.html' title='flate2::crc::CrcReader'>CrcReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/deflate/struct.EncoderReader.html' title='flate2::deflate::EncoderReader'>EncoderReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.BufRead.html' title='std::io::BufRead'>BufRead</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/deflate/struct.EncoderReaderBuf.html' title='flate2::deflate::EncoderReaderBuf'>EncoderReaderBuf</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/deflate/struct.DecoderReader.html' title='flate2::deflate::DecoderReader'>DecoderReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.BufRead.html' title='std::io::BufRead'>BufRead</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/deflate/struct.DecoderReaderBuf.html' title='flate2::deflate::DecoderReaderBuf'>DecoderReaderBuf</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/gz/struct.EncoderReader.html' title='flate2::gz::EncoderReader'>EncoderReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.BufRead.html' title='std::io::BufRead'>BufRead</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/gz/struct.EncoderReaderBuf.html' title='flate2::gz::EncoderReaderBuf'>EncoderReaderBuf</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/gz/struct.DecoderReader.html' title='flate2::gz::DecoderReader'>DecoderReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.BufRead.html' title='std::io::BufRead'>BufRead</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/gz/struct.DecoderReaderBuf.html' title='flate2::gz::DecoderReaderBuf'>DecoderReaderBuf</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/zlib/struct.EncoderReader.html' title='flate2::zlib::EncoderReader'>EncoderReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.BufRead.html' title='std::io::BufRead'>BufRead</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/zlib/struct.EncoderReaderBuf.html' title='flate2::zlib::EncoderReaderBuf'>EncoderReaderBuf</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/zlib/struct.DecoderReader.html' title='flate2::zlib::DecoderReader'>DecoderReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.BufRead.html' title='std::io::BufRead'>BufRead</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='flate2/zlib/struct.DecoderReaderBuf.html' title='flate2::zlib::DecoderReaderBuf'>DecoderReaderBuf</a>&lt;R&gt;",];implementors["immeta"] = ["impl&lt;'a, R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='immeta/common/riff/struct.Counter.html' title='immeta::common::riff::Counter'>Counter</a>&lt;'a, R&gt;",];implementors["tempfile"] = ["impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='tempfile/struct.NamedTempFile.html' title='tempfile::NamedTempFile'>NamedTempFile</a>","impl&lt;'a&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for &amp;'a <a class='struct' href='tempfile/struct.NamedTempFile.html' title='tempfile::NamedTempFile'>NamedTempFile</a>",];implementors["libloading"] = [];implementors["glx"] = [];implementors["string_cache"] = [];implementors["gleam"] = [];implementors["shared_library"] = [];implementors["offscreen_gl_context"] = [];implementors["openssl"] = ["impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='openssl/bio/struct.MemBio.html' title='openssl::bio::MemBio'>MemBio</a>","impl&lt;S: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> + <a class='trait' href='std/io/trait.Write.html' title='std::io::Write'>Write</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='openssl/ssl/struct.SslStream.html' title='openssl::ssl::SslStream'>SslStream</a>&lt;S&gt;","impl&lt;S&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='enum' href='openssl/ssl/enum.MaybeSslStream.html' title='openssl::ssl::MaybeSslStream'>MaybeSslStream</a>&lt;S&gt; <span class='where'>where S: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> + <a class='trait' href='std/io/trait.Write.html' title='std::io::Write'>Write</a></span>",];implementors["image"] = ["impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='image/tiff/decoder/stream/struct.LZWReader.html' title='image::tiff::decoder::stream::LZWReader'>LZWReader</a>","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> + <a class='trait' href='std/io/trait.Seek.html' title='std::io::Seek'>Seek</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='image/tiff/decoder/stream/struct.SmartReader.html' title='image::tiff::decoder::stream::SmartReader'>SmartReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='image/utils/bitstream/struct.LsbReader.html' title='image::utils::bitstream::LsbReader'>LsbReader</a>&lt;R&gt;","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='image/utils/bitstream/struct.MsbReader.html' title='image::utils::bitstream::MsbReader'>MsbReader</a>&lt;R&gt;",];implementors["hyper"] = ["impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/buffer/struct.BufReader.html' title='hyper::buffer::BufReader'>BufReader</a>&lt;R&gt;","impl&lt;T1: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a>, T2: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='enum' href='hyper/client/proxy/enum.Proxied.html' title='hyper::client::proxy::Proxied'>Proxied</a>&lt;T1, T2&gt;","impl&lt;S: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/client/pool/struct.PooledStream.html' title='hyper::client::pool::PooledStream'>PooledStream</a>&lt;S&gt;","impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/client/response/struct.Response.html' title='hyper::client::response::Response'>Response</a>","impl&lt;'a&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='enum' href='hyper/client/enum.Body.html' title='hyper::client::Body'>Body</a>&lt;'a&gt;","impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/http/h1/struct.Http11Message.html' title='hyper::http::h1::Http11Message'>Http11Message</a>","impl&lt;R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='enum' href='hyper/http/h1/enum.HttpReader.html' title='hyper::http::h1::HttpReader'>HttpReader</a>&lt;R&gt;","impl&lt;S&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/http/h2/struct.Http2Stream.html' title='hyper::http::h2::Http2Stream'>Http2Stream</a>&lt;S&gt; <span class='where'>where S: <a class='trait' href='hyper/http/h2/trait.CloneableStream.html' title='hyper::http::h2::CloneableStream'>CloneableStream</a></span>","impl&lt;S&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/http/h2/struct.Http2Message.html' title='hyper::http::h2::Http2Message'>Http2Message</a>&lt;S&gt; <span class='where'>where S: <a class='trait' href='hyper/http/h2/trait.CloneableStream.html' title='hyper::http::h2::CloneableStream'>CloneableStream</a></span>","impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/net/struct.HttpStream.html' title='hyper::net::HttpStream'>HttpStream</a>","impl&lt;S: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a>&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='enum' href='hyper/net/enum.HttpsStream.html' title='hyper::net::HttpsStream'>HttpsStream</a>&lt;S&gt;","impl&lt;'a, 'b&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/server/request/struct.Request.html' title='hyper::server::request::Request'>Request</a>&lt;'a, 'b&gt;",];implementors["websocket"] = ["impl&lt;S&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/client/pool/struct.PooledStream.html' title='hyper::client::pool::PooledStream'>PooledStream</a>&lt;S&gt; <span class='where'>where S: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a></span>","impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/client/response/struct.Response.html' title='hyper::client::response::Response'>Response</a>","impl&lt;'a&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='enum' href='hyper/client/enum.Body.html' title='hyper::client::Body'>Body</a>&lt;'a&gt;","impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/http/h1/struct.Http11Message.html' title='hyper::http::h1::Http11Message'>Http11Message</a>","impl&lt;R&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='enum' href='hyper/http/h1/enum.HttpReader.html' title='hyper::http::h1::HttpReader'>HttpReader</a>&lt;R&gt; <span class='where'>where R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a></span>","impl&lt;S&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/http/h2/struct.Http2Message.html' title='hyper::http::h2::Http2Message'>Http2Message</a>&lt;S&gt; <span class='where'>where S: <a class='trait' href='hyper/http/h2/trait.CloneableStream.html' title='hyper::http::h2::CloneableStream'>CloneableStream</a></span>","impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/net/struct.HttpStream.html' title='hyper::net::HttpStream'>HttpStream</a>","impl&lt;S&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='enum' href='hyper/net/enum.HttpsStream.html' title='hyper::net::HttpsStream'>HttpsStream</a>&lt;S&gt; <span class='where'>where S: <a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a></span>","impl&lt;'a, 'b&gt; <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='hyper/server/request/struct.Request.html' title='hyper::server::request::Request'>Request</a>&lt;'a, 'b&gt;","impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='enum' href='websocket/stream/enum.WebSocketStream.html' title='websocket::stream::WebSocketStream'>WebSocketStream</a>",];implementors["glutin"] = [];implementors["util"] = [];implementors["net"] = ["impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='net/http_loader/struct.WrappedHttpResponse.html' title='net::http_loader::WrappedHttpResponse'>WrappedHttpResponse</a>","impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='net/http_loader/struct.ReadableCustomResponse.html' title='net::http_loader::ReadableCustomResponse'>ReadableCustomResponse</a>","impl <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a> for <a class='struct' href='net/http_loader/struct.StreamedResponse.html' title='net::http_loader::StreamedResponse'>StreamedResponse</a>",];implementors["gfx"] = [];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
