(function() {var implementors = {};
implementors["alloc"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["collections"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='collections/boxed/struct.Box.html' title='collections::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;T:&nbsp;<a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;str&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;str&gt;","impl&lt;'a,&nbsp;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a [T]&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a str&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;u8&gt;","impl&lt;'a,&nbsp;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a [T]&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;[T]&gt;","impl&lt;'a,&nbsp;T:&nbsp;<a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;[T]&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;",];implementors["core"] = [];implementors["rustc_unicode"] = [];implementors["lazy_static"] = [];implementors["libc"] = [];implementors["void"] = [];implementors["regex_syntax"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;",];implementors["unicase"] = ["impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='unicase::UniCase'>UniCase</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='unicase/struct.UniCase.html' title='unicase::UniCase'>UniCase</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt;",];implementors["serde"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='serde/core/cmp/trait.Ord.html' title='serde::core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.ByteBuf.html' title='serde::bytes::ByteBuf'>ByteBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='serde/bytes/struct.Bytes.html' title='serde::bytes::Bytes'>Bytes</a>&lt;'a&gt;",];implementors["gif"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/enum.DecodingError.html' title='gif::DecodingError'>DecodingError</a>",];implementors["libloading"] = ["impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='libloading/util/struct.NullError.html' title='libloading::util::NullError'>NullError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='libloading/util/struct.NullError.html' title='libloading::util::NullError'>NullError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>",];implementors["dlib"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;NullError&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>",];implementors["arrayvec"] = ["impl&lt;A:&nbsp;<a class='trait' href='arrayvec/array/trait.Array.html' title='arrayvec::array::Array'>Array</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;A&gt; for <a class='struct' href='arrayvec/struct.ArrayVec.html' title='arrayvec::ArrayVec'>ArrayVec</a>&lt;A&gt;",];implementors["wayland_sys"] = [];implementors["immeta"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='immeta/enum.Error.html' title='immeta::Error'>Error</a>","impl&lt;T:&nbsp;<a class='trait' href='num_traits/cast/trait.ToPrimitive.html' title='num_traits::cast::ToPrimitive'>ToPrimitive</a>,&nbsp;U:&nbsp;<a class='trait' href='num_traits/cast/trait.ToPrimitive.html' title='num_traits::cast::ToPrimitive'>ToPrimitive</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>T, U<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='immeta/struct.Dimensions.html' title='immeta::Dimensions'>Dimensions</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='immeta/common/tiff/enum.EntryType.html' title='immeta::common::tiff::EntryType'>EntryType</a>",];implementors["enum_primitive"] = [];implementors["shared_library"] = ["impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["rustc_serialize"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='rustc_serialize::json::DecoderError'>DecoderError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='rustc_serialize::json::ParserError'>ParserError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/fmt/struct.Error.html' title='core::fmt::Error'>Error</a>&gt; for <a class='enum' href='rustc_serialize/json/enum.EncoderError.html' title='rustc_serialize::json::EncoderError'>EncoderError</a>",];implementors["serde_json"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='serde_json/error/enum.Error.html' title='serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='serde_json/error/enum.Error.html' title='serde_json::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='serde/de/value/enum.Error.html' title='serde::de::value::Error'>Error</a>&gt; for <a class='enum' href='serde_json/error/enum.Error.html' title='serde_json::error::Error'>Error</a>",];implementors["url"] = ["impl&lt;S&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='url/enum.Host.html' title='url::Host'>Host</a>&lt;S&gt;&gt; for <a class='enum' href='url/host/enum.HostInternal.html' title='url::host::HostInternal'>HostInternal</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/enum.ParseError.html' title='url::ParseError'>ParseError</a>","impl&lt;'a,&nbsp;E:&nbsp;<a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='url::percent_encoding::EncodeSet'>EncodeSet</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a,&nbsp;E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;",];implementors["gleam"] = ["impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["bincode"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>IoError</a>&gt; for <a class='enum' href='bincode/rustc_serialize/enum.DecodingError.html' title='bincode::rustc_serialize::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>IoError</a>&gt; for <a class='enum' href='bincode/serde/enum.DeserializeError.html' title='bincode::serde::DeserializeError'>DeserializeError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='serde/de/value/enum.Error.html' title='serde::de::value::Error'>Error</a>&gt; for <a class='enum' href='bincode/serde/enum.DeserializeError.html' title='bincode::serde::DeserializeError'>DeserializeError</a>",];implementors["tendril"] = ["impl&lt;F,&nbsp;A&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='tendril/struct.Tendril.html' title='tendril::Tendril'>Tendril</a>&lt;F,&nbsp;A&gt;&gt; for <a class='struct' href='tendril/struct.SendTendril.html' title='tendril::SendTendril'>SendTendril</a>&lt;F&gt; <span class='where'>where F: <a class='trait' href='tendril/fmt/trait.Format.html' title='tendril::fmt::Format'>Format</a>, A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;F,&nbsp;A&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='tendril/struct.SendTendril.html' title='tendril::SendTendril'>SendTendril</a>&lt;F&gt;&gt; for <a class='struct' href='tendril/struct.Tendril.html' title='tendril::Tendril'>Tendril</a>&lt;F,&nbsp;A&gt; <span class='where'>where F: <a class='trait' href='tendril/fmt/trait.Format.html' title='tendril::fmt::Format'>Format</a>, A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a,&nbsp;F,&nbsp;A&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a F::Slice&gt; for <a class='struct' href='tendril/struct.Tendril.html' title='tendril::Tendril'>Tendril</a>&lt;F,&nbsp;A&gt; <span class='where'>where F: <a class='trait' href='tendril/fmt/trait.SliceFormat.html' title='tendril::fmt::SliceFormat'>SliceFormat</a>, A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='tendril/struct.Tendril.html' title='tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='tendril::fmt::UTF8'>UTF8</a>,&nbsp;A&gt; <span class='where'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;A&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='tendril/struct.Tendril.html' title='tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='tendril::fmt::UTF8'>UTF8</a>,&nbsp;A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a> <span class='where'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='tendril::tendril::Atomicity'>Atomicity</a></span>","impl&lt;'a,&nbsp;A&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='tendril/struct.Tendril.html' title='tendril::Tendril'>Tendril</a>&lt;<a class='struct' href='tendril/fmt/struct.UTF8.html' title='tendril::fmt::UTF8'>UTF8</a>,&nbsp;A&gt;&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a> <span class='where'>where A: <a class='trait' href='tendril/tendril/trait.Atomicity.html' title='tendril::tendril::Atomicity'>Atomicity</a></span>",];implementors["glx"] = ["impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["solicit"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;&gt; for <a class='struct' href='solicit/http/frame/struct.RawFrame.html' title='solicit::http::frame::RawFrame'>RawFrame</a>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/session/enum.StreamDataError.html' title='solicit::http::session::StreamDataError'>StreamDataError</a> <span class='where'>where E: <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'static</span>","impl&lt;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='solicit::http::HttpError'>HttpError</a> <span class='where'>where E: <a class='trait' href='solicit/http/client/trait.HttpConnectError.html' title='solicit::http::client::HttpConnectError'>HttpConnectError</a> + 'static</span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='struct' href='solicit/http/client/struct.CleartextConnectError.html' title='solicit::http::client::CleartextConnectError'>CleartextConnectError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='solicit/http/enum.HttpError.html' title='solicit::http::HttpError'>HttpError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='solicit/client/async/enum.ClientServiceErr.html' title='solicit::client::async::ClientServiceErr'>ClientServiceErr</a>",];implementors["openssl"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='openssl/ssl/error/enum.NonblockingSslError.html' title='openssl::ssl::error::NonblockingSslError'>NonblockingSslError</a>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["tempfile"] = ["impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='tempfile/struct.PersistError.html' title='tempfile::PersistError'>PersistError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='tempfile/struct.PersistError.html' title='tempfile::PersistError'>PersistError</a>&gt; for <a class='struct' href='tempfile/struct.NamedTempFile.html' title='tempfile::NamedTempFile'>NamedTempFile</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='tempfile/struct.NamedTempFile.html' title='tempfile::NamedTempFile'>NamedTempFile</a>&gt; for <a class='struct' href='std/fs/struct.File.html' title='std::fs::File'>File</a>",];implementors["wayland_kbd"] = [];implementors["num_bigint"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='struct' href='num_bigint/struct.BigUint.html' title='num_bigint::BigUint'>BigUint</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='struct' href='num_bigint/struct.BigUint.html' title='num_bigint::BigUint'>BigUint</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='struct' href='num_bigint/struct.BigUint.html' title='num_bigint::BigUint'>BigUint</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='num_bigint/struct.BigUint.html' title='num_bigint::BigUint'>BigUint</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='num_bigint/struct.BigUint.html' title='num_bigint::BigUint'>BigUint</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i8.html'>i8</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.isize.html'>isize</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.usize.html'>usize</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='num_bigint/struct.BigUint.html' title='num_bigint::BigUint'>BigUint</a>&gt; for <a class='struct' href='num_bigint/struct.BigInt.html' title='num_bigint::BigInt'>BigInt</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/num/struct.ParseIntError.html' title='core::num::ParseIntError'>ParseIntError</a>&gt; for <a class='enum' href='num_bigint/enum.ParseBigIntError.html' title='num_bigint::ParseBigIntError'>ParseBigIntError</a>",];implementors["jpeg_decoder"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>IoError</a>&gt; for <a class='enum' href='jpeg_decoder/enum.Error.html' title='jpeg_decoder::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.RecvError.html' title='std::sync::mpsc::RecvError'>RecvError</a>&gt; for <a class='enum' href='jpeg_decoder/enum.Error.html' title='jpeg_decoder::Error'>Error</a>","impl&lt;T:&nbsp;<a class='trait' href='core/any/trait.Any.html' title='core::any::Any'>Any</a> + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sync/mpsc/struct.SendError.html' title='std::sync::mpsc::SendError'>SendError</a>&lt;T&gt;&gt; for <a class='enum' href='jpeg_decoder/enum.Error.html' title='jpeg_decoder::Error'>Error</a>",];implementors["regex"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='regex_syntax/struct.Error.html' title='regex_syntax::Error'>Error</a>&gt; for <a class='enum' href='regex/enum.Error.html' title='regex::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt; for <a class='struct' href='regex/input/struct.Char.html' title='regex::input::Char'>Char</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='primitive' href='std/primitive.char.html'>char</a>&gt;&gt; for <a class='struct' href='regex/input/struct.Char.html' title='regex::input::Char'>Char</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='regex/exec/struct.Exec.html' title='regex::exec::Exec'>Exec</a>&gt; for <a class='struct' href='regex/bytes/struct.Regex.html' title='regex::bytes::Regex'>Regex</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='regex/exec/struct.Exec.html' title='regex::exec::Exec'>Exec</a>&gt; for <a class='struct' href='regex/struct.RegexSet.html' title='regex::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='regex/exec/struct.Exec.html' title='regex::exec::Exec'>Exec</a>&gt; for <a class='struct' href='regex/bytes/struct.RegexSet.html' title='regex::bytes::RegexSet'>RegexSet</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='regex/exec/struct.Exec.html' title='regex::exec::Exec'>Exec</a>&gt; for <a class='struct' href='regex/struct.Regex.html' title='regex::Regex'>Regex</a>",];implementors["png"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/enum.DecodingError.html' title='png::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='png/enum.DecodingError.html' title='png::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='png/enum.DecodingError.html' title='png::DecodingError'>DecodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='png/enum.EncodingError.html' title='png::EncodingError'>EncodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='png/enum.EncodingError.html' title='png::EncodingError'>EncodingError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>",];implementors["dbus"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u64.html'>u64</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u16.html'>u16</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i16.html'>i16</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i32.html'>i32</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.i64.html'>i64</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.f64.html'>f64</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.Into.html' title='core::convert::Into'>Into</a>&lt;<a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>&gt; + <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a> + <a class='trait' href='core/default/trait.Default.html' title='core::default::Default'>Default</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='dbus/struct.Path.html' title='dbus::Path'>Path</a>&lt;'static&gt;&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='dbus/struct.OwnedFd.html' title='dbus::OwnedFd'>OwnedFd</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>&gt;&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>, <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='dbus/enum.MessageItem.html' title='dbus::MessageItem'>MessageItem</a>","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Signature.html' title='dbus::Signature'>Signature</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Signature.html' title='dbus::Signature'>Signature</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.Signature.html' title='dbus::Signature'>Signature</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Path.html' title='dbus::Path'>Path</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Path.html' title='dbus::Path'>Path</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.Path.html' title='dbus::Path'>Path</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Member.html' title='dbus::Member'>Member</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Member.html' title='dbus::Member'>Member</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.Member.html' title='dbus::Member'>Member</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Interface.html' title='dbus::Interface'>Interface</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.Interface.html' title='dbus::Interface'>Interface</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.Interface.html' title='dbus::Interface'>Interface</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.BusName.html' title='dbus::BusName'>BusName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.BusName.html' title='dbus::BusName'>BusName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.BusName.html' title='dbus::BusName'>BusName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.ErrorName.html' title='dbus::ErrorName'>ErrorName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='dbus/struct.ErrorName.html' title='dbus::ErrorName'>ErrorName</a>&lt;'m&gt;","impl&lt;'m&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'m <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/struct.ErrorName.html' title='dbus::ErrorName'>ErrorName</a>&lt;'m&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='dbus/struct.Signature.html' title='dbus::Signature'>Signature</a>&lt;'static&gt;&gt; for <a class='struct' href='dbus/methoddisp/struct.Argument.html' title='dbus::methoddisp::Argument'>Argument</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='dbus/methoddisp/struct.Argument.html' title='dbus::methoddisp::Argument'>Argument</a>","impl&lt;N:&nbsp;<a class='trait' href='core/convert/trait.Into.html' title='core::convert::Into'>Into</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt;,&nbsp;S:&nbsp;<a class='trait' href='core/convert/trait.Into.html' title='core::convert::Into'>Into</a>&lt;<a class='struct' href='dbus/struct.Signature.html' title='dbus::Signature'>Signature</a>&lt;'static&gt;&gt;&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>N, S<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='dbus/methoddisp/struct.Argument.html' title='dbus::methoddisp::Argument'>Argument</a>","impl&lt;T:&nbsp;<a class='trait' href='core/convert/trait.Into.html' title='core::convert::Into'>Into</a>&lt;<a class='struct' href='dbus/struct.ErrorName.html' title='dbus::ErrorName'>ErrorName</a>&lt;'static&gt;&gt;,&nbsp;M:&nbsp;<a class='trait' href='core/convert/trait.Into.html' title='core::convert::Into'>Into</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt;&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a>T, M<a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='struct' href='dbus/methoddisp/struct.MethodErr.html' title='dbus::methoddisp::MethodErr'>MethodErr</a>",];implementors["x11"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='x11::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='x11::xlib::XAnyEvent'>XAnyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XAnyEvent.html' title='x11::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='x11::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='x11::xlib::XButtonEvent'>XButtonEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XButtonEvent.html' title='x11::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='x11::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateEvent.html' title='x11::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCirculateRequestEvent.html' title='x11::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XClientMessageEvent.html' title='x11::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='x11::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='x11::xlib::XColormapEvent'>XColormapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XColormapEvent.html' title='x11::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='x11::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureEvent.html' title='x11::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XConfigureRequestEvent.html' title='x11::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCreateWindowEvent.html' title='x11::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='x11::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XCrossingEvent.html' title='x11::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XDestroyWindowEvent.html' title='x11::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='x11::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='x11::xlib::XErrorEvent'>XErrorEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XErrorEvent.html' title='x11::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='x11::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='x11::xlib::XExposeEvent'>XExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XExposeEvent.html' title='x11::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XFocusChangeEvent.html' title='x11::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGenericEventCookie.html' title='x11::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGraphicsExposeEvent.html' title='x11::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='x11::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='x11::xlib::XGravityEvent'>XGravityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XGravityEvent.html' title='x11::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='x11::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='x11::xlib::XKeyEvent'>XKeyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeyEvent.html' title='x11::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='x11::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XKeymapEvent.html' title='x11::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapEvent.html' title='x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='x11::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='x11::xlib::XMapEvent'>XMapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapEvent.html' title='x11::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='x11::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='x11::xlib::XMappingEvent'>XMappingEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMappingEvent.html' title='x11::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMapRequestEvent.html' title='x11::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='x11::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='x11::xlib::XMotionEvent'>XMotionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XMotionEvent.html' title='x11::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XNoExposeEvent.html' title='x11::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='x11::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XPropertyEvent.html' title='x11::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='x11::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='x11::xlib::XReparentEvent'>XReparentEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XReparentEvent.html' title='x11::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XResizeRequestEvent.html' title='x11::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionClearEvent.html' title='x11::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='x11::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionEvent.html' title='x11::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XSelectionRequestEvent.html' title='x11::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='x11::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XUnmapEvent.html' title='x11::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='x11/xlib/struct.XEvent.html' title='x11::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11/xlib/struct.XVisibilityEvent.html' title='x11::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_schar.html' title='std::os::raw::c_schar'>c_schar</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_uchar.html' title='std::os::raw::c_uchar'>c_uchar</a><a class='primitive' href='std/primitive.array.html'>; 20]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_short.html' title='std::os::raw::c_short'>c_short</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_ushort.html' title='std::os::raw::c_ushort'>c_ushort</a><a class='primitive' href='std/primitive.array.html'>; 10]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_long.html' title='std::os::raw::c_long'>c_long</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='x11::xlib::ClientMessageData'>ClientMessageData</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='type' href='std/os/raw/type.c_ulong.html' title='std::os::raw::c_ulong'>c_ulong</a><a class='primitive' href='std/primitive.array.html'>; 5]</a>&gt; for <a class='struct' href='x11/xlib/struct.ClientMessageData.html' title='x11::xlib::ClientMessageData'>ClientMessageData</a>",];implementors["string_cache"] = ["impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='string_cache::atom::Atom'>Atom</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='string_cache::atom::Atom'>Atom</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='string_cache::atom::Atom'>Atom</a>",];implementors["ipc_channel"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='ipc_channel/platform/linux/struct.UnixError.html' title='ipc_channel::platform::linux::UnixError'>UnixError</a>&gt; for <a class='enum' href='bincode/serde/reader/enum.DeserializeError.html' title='bincode::serde::reader::DeserializeError'>DeserializeError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='ipc_channel/platform/linux/struct.UnixError.html' title='ipc_channel::platform::linux::UnixError'>UnixError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>",];implementors["offscreen_gl_context"] = ["impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["xml5ever"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["image"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>&gt; for <a class='enum' href='image/enum.ColorType.html' title='image::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='image/enum.ColorType.html' title='image::ColorType'>ColorType</a>&gt; for <a class='primitive' href='std/primitive.tuple.html'>(</a><a class='enum' href='png/common/enum.ColorType.html' title='png::common::ColorType'>ColorType</a>, <a class='enum' href='png/common/enum.BitDepth.html' title='png::common::BitDepth'>BitDepth</a><a class='primitive' href='std/primitive.tuple.html'>)</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='png/decoder/stream/enum.DecodingError.html' title='png::decoder::stream::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/enum.ImageError.html' title='image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/decoder/enum.PixelFormat.html' title='jpeg_decoder::decoder::PixelFormat'>PixelFormat</a>&gt; for <a class='enum' href='image/enum.ColorType.html' title='image::ColorType'>ColorType</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='jpeg_decoder/error/enum.Error.html' title='jpeg_decoder::error::Error'>Error</a>&gt; for <a class='enum' href='image/enum.ImageError.html' title='image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='gif::reader::decoder::DecodingError'>DecodingError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='gif/reader/decoder/enum.DecodingError.html' title='gif::reader::decoder::DecodingError'>DecodingError</a>&gt; for <a class='enum' href='image/enum.ImageError.html' title='image::ImageError'>ImageError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='image/enum.ImageError.html' title='image::ImageError'>ImageError</a>",];implementors["util"] = ["impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;",];implementors["html5ever"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["hyper"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='url::parser::ParseError'>ParseError</a>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a,&nbsp;E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='hyper/client/pool/enum.Scheme.html' title='hyper::client::pool::Scheme'>Scheme</a>","impl&lt;'a,&nbsp;R:&nbsp;<a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='hyper::client::Body'>Body</a>&lt;'a&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>IoError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='solicit::http::HttpError'>Http2Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl&lt;W:&nbsp;<a class='trait' href='std/io/trait.Write.html' title='std::io::Write'>Write</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='struct' href='hyper/http/h2/struct.Http2ConnectError.html' title='hyper::http::h2::Http2ConnectError'>Http2ConnectError</a>","impl&lt;T:&nbsp;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a>&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a> + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='hyper::net::HttpListener'>HttpListener</a>",];implementors["x11_dl"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='x11_dl::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='x11_dl::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='x11_dl::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='x11_dl::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='x11_dl::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='x11_dl::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='x11_dl::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='x11_dl::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='x11_dl::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='x11_dl::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='x11_dl::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='x11_dl::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='x11_dl::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='x11_dl::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='x11_dl::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='x11_dl::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='x11_dl::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='x11_dl::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='x11_dl::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='x11_dl::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='x11_dl::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='x11_dl::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>",];implementors["webdriver"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.ParserError.html' title='rustc_serialize::json::ParserError'>ParserError</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>IoError</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='webdriver::error::WebDriverError'>WebDriverError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='rustc_serialize/json/enum.DecoderError.html' title='rustc_serialize::json::DecoderError'>DecoderError</a>&gt; for <a class='struct' href='webdriver/error/struct.WebDriverError.html' title='webdriver::error::WebDriverError'>WebDriverError</a>",];implementors["websocket"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='idna/uts46/struct.Errors.html' title='idna::uts46::Errors'>Errors</a>&gt; for <a class='enum' href='url/parser/enum.ParseError.html' title='url::parser::ParseError'>ParseError</a>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentEncode.html' title='url::percent_encoding::PercentEncode'>PercentEncode</a>&lt;'a,&nbsp;E&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt; <span class='where'>where E: <a class='trait' href='url/percent_encoding/trait.EncodeSet.html' title='url::percent_encoding::EncodeSet'>EncodeSet</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='url/percent_encoding/struct.PercentDecode.html' title='url::percent_encoding::PercentDecode'>PercentDecode</a>&lt;'a&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.slice.html'>]</a>&gt;","impl&lt;'a,&nbsp;R&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a mut R&gt; for <a class='enum' href='hyper/client/enum.Body.html' title='hyper::client::Body'>Body</a>&lt;'a&gt; <span class='where'>where R: <a class='trait' href='std/io/trait.Read.html' title='std::io::Read'>Read</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.FromUtf8Error.html' title='collections::string::FromUtf8Error'>FromUtf8Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='httparse/enum.Error.html' title='httparse::Error'>Error</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='solicit/http/enum.HttpError.html' title='solicit::http::HttpError'>HttpError</a>&gt; for <a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>Error</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='hyper/http/h1/struct.EndError.html' title='hyper::http::h1::EndError'>EndError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a> <span class='where'>where W: <a class='trait' href='std/io/trait.Write.html' title='std::io::Write'>Write</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a>&gt; <span class='where'>where T: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='hyper/net/trait.NetworkStream.html' title='hyper::net::NetworkStream'>NetworkStream</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/tcp/struct.TcpListener.html' title='std::net::tcp::TcpListener'>TcpListener</a>&gt; for <a class='struct' href='hyper/net/struct.HttpListener.html' title='hyper::net::HttpListener'>HttpListener</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='hyper/error/enum.Error.html' title='hyper::error::Error'>HttpError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='url/parser/enum.ParseError.html' title='url::parser::ParseError'>ParseError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='openssl/ssl/error/enum.SslError.html' title='openssl::ssl::error::SslError'>SslError</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='core/str/struct.Utf8Error.html' title='core::str::Utf8Error'>Utf8Error</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='websocket::result::WebSocketError'>WebSocketError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='websocket/result/enum.WSUrlErrorKind.html' title='websocket::result::WSUrlErrorKind'>WSUrlErrorKind</a>&gt; for <a class='enum' href='websocket/result/enum.WebSocketError.html' title='websocket::result::WebSocketError'>WebSocketError</a>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["glutin"] = ["impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='glutin/api/x11/ffi/glx_extra/__gl_imports/trait.Send.html' title='glutin::api::x11::ffi::glx_extra::__gl_imports::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='glutin/api/x11/ffi/glx_extra/__gl_imports/trait.Send.html' title='glutin::api::x11::ffi::glx_extra::__gl_imports::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='glutin/api/x11/ffi/glx_extra/__gl_imports/trait.Send.html' title='glutin::api::x11::ffi::glx_extra::__gl_imports::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='glutin/api/x11/ffi/glx_extra/__gl_imports/trait.Send.html' title='glutin::api::x11::ffi::glx_extra::__gl_imports::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='glutin/enum.CreationError.html' title='glutin::CreationError'>CreationError</a>&gt; for <a class='enum' href='glutin/api/osmesa/enum.OsMesaCreationError.html' title='glutin::api::osmesa::OsMesaCreationError'>OsMesaCreationError</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='x11_dl::xlib::XAnyEvent'>XAnyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='x11_dl::xlib::XButtonEvent'>XButtonEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='x11_dl::xlib::XColormapEvent'>XColormapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='x11_dl::xlib::XErrorEvent'>XErrorEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='x11_dl::xlib::XExposeEvent'>XExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='x11_dl::xlib::XGravityEvent'>XGravityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='x11_dl::xlib::XKeyEvent'>XKeyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='x11_dl::xlib::XMapEvent'>XMapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='x11_dl::xlib::XMappingEvent'>XMappingEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='x11_dl::xlib::XMotionEvent'>XMotionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='x11_dl::xlib::XReparentEvent'>XReparentEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XAnyEvent.html' title='x11_dl::xlib::XAnyEvent'>XAnyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XButtonEvent.html' title='x11_dl::xlib::XButtonEvent'>XButtonEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateEvent.html' title='x11_dl::xlib::XCirculateEvent'>XCirculateEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCirculateRequestEvent.html' title='x11_dl::xlib::XCirculateRequestEvent'>XCirculateRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XClientMessageEvent.html' title='x11_dl::xlib::XClientMessageEvent'>XClientMessageEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XColormapEvent.html' title='x11_dl::xlib::XColormapEvent'>XColormapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureEvent.html' title='x11_dl::xlib::XConfigureEvent'>XConfigureEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XConfigureRequestEvent.html' title='x11_dl::xlib::XConfigureRequestEvent'>XConfigureRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCreateWindowEvent.html' title='x11_dl::xlib::XCreateWindowEvent'>XCreateWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XCrossingEvent.html' title='x11_dl::xlib::XCrossingEvent'>XCrossingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XDestroyWindowEvent.html' title='x11_dl::xlib::XDestroyWindowEvent'>XDestroyWindowEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XErrorEvent.html' title='x11_dl::xlib::XErrorEvent'>XErrorEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XExposeEvent.html' title='x11_dl::xlib::XExposeEvent'>XExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XFocusChangeEvent.html' title='x11_dl::xlib::XFocusChangeEvent'>XFocusChangeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGraphicsExposeEvent.html' title='x11_dl::xlib::XGraphicsExposeEvent'>XGraphicsExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGravityEvent.html' title='x11_dl::xlib::XGravityEvent'>XGravityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeyEvent.html' title='x11_dl::xlib::XKeyEvent'>XKeyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XKeymapEvent.html' title='x11_dl::xlib::XKeymapEvent'>XKeymapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapEvent.html' title='x11_dl::xlib::XMapEvent'>XMapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMappingEvent.html' title='x11_dl::xlib::XMappingEvent'>XMappingEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMapRequestEvent.html' title='x11_dl::xlib::XMapRequestEvent'>XMapRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XMotionEvent.html' title='x11_dl::xlib::XMotionEvent'>XMotionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XNoExposeEvent.html' title='x11_dl::xlib::XNoExposeEvent'>XNoExposeEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XPropertyEvent.html' title='x11_dl::xlib::XPropertyEvent'>XPropertyEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XReparentEvent.html' title='x11_dl::xlib::XReparentEvent'>XReparentEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XResizeRequestEvent.html' title='x11_dl::xlib::XResizeRequestEvent'>XResizeRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionClearEvent.html' title='x11_dl::xlib::XSelectionClearEvent'>XSelectionClearEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionEvent.html' title='x11_dl::xlib::XSelectionEvent'>XSelectionEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XSelectionRequestEvent.html' title='x11_dl::xlib::XSelectionRequestEvent'>XSelectionRequestEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XUnmapEvent.html' title='x11_dl::xlib::XUnmapEvent'>XUnmapEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XVisibilityEvent.html' title='x11_dl::xlib::XVisibilityEvent'>XVisibilityEvent</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='x11_dl/xlib/struct.XEvent.html' title='x11_dl::xlib::XEvent'>XEvent</a>&gt; for <a class='struct' href='x11_dl/xlib/struct.XGenericEventCookie.html' title='x11_dl::xlib::XGenericEventCookie'>XGenericEventCookie</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='glutin/api/x11/ffi/struct.OpenError.html' title='glutin::api::x11::ffi::OpenError'>OpenError</a>&gt; for <a class='enum' href='glutin/api/x11/enum.XNotSupported.html' title='glutin::api::x11::XNotSupported'>XNotSupported</a>",];implementors["style"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/enum.LengthOrPercentage.html' title='style::values::computed::LengthOrPercentage'>LengthOrPercentage</a>&gt; for <a class='struct' href='style/values/computed/struct.CalcLengthOrPercentage.html' title='style::values::computed::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/enum.LengthOrPercentageOrAuto.html' title='style::values::computed::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='style/values/computed/struct.CalcLengthOrPercentage.html' title='style::values::computed::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>&gt;",];implementors["net_traits"] = [];implementors["net"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/arc/struct.Arc.html' title='alloc::arc::Arc'>Arc</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["gfx"] = ["impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/enum.LengthOrPercentage.html' title='style::values::computed::LengthOrPercentage'>LengthOrPercentage</a>&gt; for <a class='struct' href='style/values/computed/struct.CalcLengthOrPercentage.html' title='style::values::computed::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='style/values/computed/enum.LengthOrPercentageOrAuto.html' title='style::values::computed::LengthOrPercentageOrAuto'>LengthOrPercentageOrAuto</a>&gt; for <a class='enum' href='core/option/enum.Option.html' title='core::option::Option'>Option</a>&lt;<a class='struct' href='style/values/computed/struct.CalcLengthOrPercentage.html' title='style::values::computed::CalcLengthOrPercentage'>CalcLengthOrPercentage</a>&gt;","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a&gt; <span class='where'>where E: 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl&lt;'a,&nbsp;E&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;E&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt; <span class='where'>where E: <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a> + 'a + <a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl&lt;'a,&nbsp;'b&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'b <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'a + <a class='trait' href='core/marker/trait.Send.html' title='core::marker::Send'>Send</a> + <a class='trait' href='core/marker/trait.Sync.html' title='core::marker::Sync'>Sync</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;<a class='trait' href='std/error/trait.Error.html' title='std::error::Error'>Error</a> + 'static&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/c_str/struct.NulError.html' title='std::ffi::c_str::NulError'>NulError</a>&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/ffi/c_str/struct.CStr.html' title='std::ffi::c_str::CStr'>CStr</a>&gt; for <a class='struct' href='std/ffi/c_str/struct.CString.html' title='std::ffi::c_str::CString'>CString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl&lt;W&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/io/buffered/struct.IntoInnerError.html' title='std::io::buffered::IntoInnerError'>IntoInnerError</a>&lt;W&gt;&gt; for <a class='struct' href='std/io/error/struct.Error.html' title='std::io::error::Error'>Error</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>&gt; for <a class='primitive' href='std/primitive.u32.html'>u32</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.u32.html'>u32</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 4]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv4Addr.html' title='std::net::ip::Ipv4Addr'>Ipv4Addr</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.array.html'>[</a><a class='primitive' href='std/primitive.u8.html'>u8</a><a class='primitive' href='std/primitive.array.html'>; 16]</a>&gt; for <a class='struct' href='std/net/ip/struct.Ipv6Addr.html' title='std::net::ip::Ipv6Addr'>Ipv6Addr</a>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a T&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a> <span class='where'>where T: <a class='trait' href='core/convert/trait.AsRef.html' title='core::convert::AsRef'>AsRef</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsStr.html' title='std::ffi::os_str::OsStr'>OsStr</a>&gt; + ?<a class='trait' href='core/marker/trait.Sized.html' title='core::marker::Sized'>Sized</a></span>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/ffi/os_str/struct.OsString.html' title='std::ffi::os_str::OsString'>OsString</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/path/struct.PathBuf.html' title='std::path::PathBuf'>PathBuf</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='struct' href='std/path/struct.Path.html' title='std::path::Path'>Path</a>&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='std/sys_common/poison/struct.PoisonError.html' title='std::sys_common::poison::PoisonError'>PoisonError</a>&lt;T&gt;&gt; for <a class='enum' href='std/sys_common/poison/enum.TryLockError.html' title='std::sys_common::poison::TryLockError'>TryLockError</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/rc/struct.Rc.html' title='alloc::rc::Rc'>Rc</a>&lt;T&gt;",];implementors["script"] = ["impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='script::dom::bindings::str::DOMString'>DOMString</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='script::dom::bindings::str::DOMString'>DOMString</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='string_cache/atom/struct.Atom.html' title='string_cache::atom::Atom'>Atom</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/cmp/trait.Ord.html' title='core::cmp::Ord'>Ord</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/binary_heap/struct.BinaryHeap.html' title='collections::binary_heap::BinaryHeap'>BinaryHeap</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/string/struct.String.html' title='collections::string::String'>String</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.str.html'>str</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='primitive' href='std/primitive.str.html'>str</a>&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;<a class='primitive' href='std/primitive.u8.html'>u8</a>&gt;","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.slice.html'>&amp;'a [T]</a>&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;'a,&nbsp;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='enum' href='collections/borrow/enum.Cow.html' title='collections::borrow::Cow'>Cow</a>&lt;'a,&nbsp;<a class='primitive' href='std/primitive.slice.html'>[</a>T<a class='primitive' href='std/primitive.slice.html'>]</a>&gt; <span class='where'>where T: <a class='trait' href='core/clone/trait.Clone.html' title='core::clone::Clone'>Clone</a></span>","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='collections/vec_deque/struct.VecDeque.html' title='collections::vec_deque::VecDeque'>VecDeque</a>&lt;T&gt;&gt; for <a class='struct' href='collections/vec/struct.Vec.html' title='collections::vec::Vec'>Vec</a>&lt;T&gt;","impl&lt;T&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;T&gt; for <a class='struct' href='alloc/boxed/struct.Box.html' title='alloc::boxed::Box'>Box</a>&lt;T&gt;","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='script/dom/event/enum.EventBubbles.html' title='script::dom::event::EventBubbles'>EventBubbles</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='script/dom/event/enum.EventBubbles.html' title='script::dom::event::EventBubbles'>EventBubbles</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='script/dom/event/enum.EventCancelable.html' title='script::dom::event::EventCancelable'>EventCancelable</a>&gt; for <a class='primitive' href='std/primitive.bool.html'>bool</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='primitive' href='std/primitive.bool.html'>bool</a>&gt; for <a class='enum' href='script/dom/event/enum.EventCancelable.html' title='script::dom::event::EventCancelable'>EventCancelable</a>","impl&lt;'a&gt; <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;&amp;'a <a class='struct' href='script/dom/bindings/codegen/Bindings/WebGLRenderingContextBinding/struct.WebGLContextAttributes.html' title='script::dom::bindings::codegen::Bindings::WebGLRenderingContextBinding::WebGLContextAttributes'>WebGLContextAttributes</a>&gt; for <a class='struct' href='offscreen_gl_context/gl_context_attributes/struct.GLContextAttributes.html' title='offscreen_gl_context::gl_context_attributes::GLContextAttributes'>GLContextAttributes</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='script::dom::bindings::str::DOMString'>DOMString</a>&gt; for <a class='enum' href='script/textinput/enum.SelectionDirection.html' title='script::textinput::SelectionDirection'>SelectionDirection</a>","impl <a class='trait' href='core/convert/trait.From.html' title='core::convert::From'>From</a>&lt;<a class='enum' href='script/textinput/enum.SelectionDirection.html' title='script::textinput::SelectionDirection'>SelectionDirection</a>&gt; for <a class='struct' href='script/dom/bindings/str/struct.DOMString.html' title='script::dom::bindings::str::DOMString'>DOMString</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
