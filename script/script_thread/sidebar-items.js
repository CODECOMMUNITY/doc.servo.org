initSidebarItems({"enum":[["MainThreadScriptMsg","Messages used to control the script event loop"],["MixedMessage",""]],"fn":[["dom_last_modified",""],["get_browsing_context",""],["shadow_check_callback",""],["shut_down_layout","Shuts down layout for the given browsing context tree."],["trace_thread",""]],"static":[["SCRIPT_THREAD_ROOT",""],["STACK_ROOTS",""]],"struct":[["CancellableRunnable","A runnable that can be discarded by toggling a shared flag."],["InProgressLoad","A document load that is in the process of fetching the requested resource. Contains data that will need to be present when the document and frame tree entry are created, but is only easily available at initiation of the load and on a push basis (so some data will be updated according to future resize events, viewport changes, etc.)"],["MainThreadScriptChan","Encapsulates internal communication of main thread messages within the script thread."],["RunnableWrapper","Encapsulated state required to create cancellable runnables from non-script threads."],["ScriptMemoryFailsafe","In the event of thread panic, all data on the stack runs its destructor. However, there are no reachable, owning pointers to the DOM memory, so it never gets freed by default when the script thread fails. The ScriptMemoryFailsafe uses the destructor bomb pattern to forcibly tear down the JS compartments for pages associated with the failing ScriptThread."],["ScriptThread","Information for an entire page. Pages are top-level browsing contexts and can contain multiple frames."],["SendableMainThreadScriptChan","Encapsulates internal communication of shared messages within the script thread."]],"trait":[["MainThreadRunnable",""],["Runnable",""]]});