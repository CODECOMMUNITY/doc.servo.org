initSidebarItems({"constant":[["_IMPL_DESERIALIZE_FOR_Epoch",""],["_IMPL_DESERIALIZE_FOR_FragmentType",""],["_IMPL_DESERIALIZE_FOR_LayerId",""],["_IMPL_DESERIALIZE_FOR_LayerType",""],["_IMPL_DESERIALIZE_FOR_ScrollPolicy",""],["_IMPL_DESERIALIZE_FOR_StackingContextId",""],["_IMPL_SERIALIZE_FOR_Epoch",""],["_IMPL_SERIALIZE_FOR_FragmentType",""],["_IMPL_SERIALIZE_FOR_LayerId",""],["_IMPL_SERIALIZE_FOR_LayerType",""],["_IMPL_SERIALIZE_FOR_ScrollPolicy",""],["_IMPL_SERIALIZE_FOR_StackingContextId",""]],"enum":[["FragmentType",""],["LayerKind",""],["LayerType",""],["ScrollPolicy","The scrolling policy of a layer."]],"mod":[["color",""],["paint_listener",""]],"struct":[["Epoch","A newtype struct for denoting the age of messages; prevents race conditions."],["FrameTreeId",""],["LayerId",""],["LayerProperties","All layer-specific information that the painting task sends to the compositor other than the buffer contents of the layer itself."],["StackingContextId","A unique ID for every stacking context."]],"trait":[["PaintListener","The interface used by the painter to acquire draw targets for each paint frame and submit them to be drawn to the display."]]});